name: Release

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Release type (one of): patch, minor, major, prepatch, preminor, premajor, prerelease'
        required: true

env:
  IS_PRERELEASE: ${{ startsWith(github.event.inputs.release-type, 'pre') }}
  RELEASE_TYPE: ${{ github.event.inputs.release-type }}
  NODE_VERSION: '16.x'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          registry-url: 'https://registry.npmjs.org'
          node-version: ${{ env.NODE_VERSION }}

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build

      - name: Get release tag
        run: |
          if $IS_PRERELEASE
          then
            echo "PREID=\"next\"" >> $GITHUB_ENV
            echo "RELEASE_TAG=\"next\"" >> $GITHUB_ENV
          else
            echo "PREID=\"\"" >> $GITHUB_ENV
            echo "RELEASE_TAG=\"latest\"" >> $GITHUB_ENV
          fi

      - name: Bump version
        run: echo "NEW_VERSION=$(npm --no-git-tag-version --preid=$PREID version $RELEASE_TYPE)" >> $GITHUB_ENV

      - name: Update changelog
        run: |
          npm run changelog
          npm run release-notes

      - name: Push changes to repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'chore: release ${{ env.NEW_VERSION }}'
          commit_options: '--no-verify --signoff'
          file_pattern: package.json CHANGELOG.md
          tagging_message: '${{ env.NEW_VERSION }}'

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
        run: |
          npm pack
          npm publish --verbose --access public --tag "${RELEASE_TAG}"

      - name: Sanitize version string
        run: echo "CLEAN_NEW_VERSION=${NEW_VERSION:1}" >> $GITHUB_ENV

      - name: Create Github release
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'solec-ic-canister-plugin-${{ env.CLEAN_NEW_VERSION }}.tgz'
          bodyFile: 'RELEASE_NOTES.md'
          tag: '${{ env.NEW_VERSION }}'
          commit: 'main'
